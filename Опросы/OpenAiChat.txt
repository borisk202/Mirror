<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="UTF-8" />
<title>Redgram ‚Äî Telegram-–ø–æ–¥–æ–±–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä</title>
<meta name="viewport" content="width=device-width, initial-scale=1" />
<style>
  /* –°—Ç–∏–ª–∏ –≤ —Ç–≤–æ–µ–π –ø–∞–ª–∏—Ç—Ä–µ –∫—Ä–∞—Å–Ω–æ-–±–µ–ª–æ-—á–µ—Ä–Ω–æ–π */
  * {
    box-sizing: border-box;
  }
  body, html {
    margin:0; padding:0; height:100%;
    background: #000;
    color: #eee;
    font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    display: flex;
    flex-direction: column;
  }
  header {
    background: #b10000;
    padding: 15px;
    text-align: center;
    font-size: 24px;
    font-weight: bold;
    color: white;
    user-select: none;
  }
  #app {
    flex: 1;
    display: flex;
    overflow: hidden;
    height: calc(100vh - 60px);
  }
  /* Sidebar —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —á–∞—Ç–∞–º–∏ */
  #sidebar {
    width: 280px;
    background: #111;
    border-right: 3px solid #b10000;
    display: flex;
    flex-direction: column;
  }
  #sidebar header {
    font-weight: bold;
    padding: 10px;
    border-bottom: 2px solid #b10000;
    color: #f5f5f5;
    text-align: center;
  }
  #userList, #chatList {
    flex: 1;
    overflow-y: auto;
    padding: 8px;
  }
  #userList .user, #chatList .chat {
    background: #222;
    margin-bottom: 8px;
    padding: 8px;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.3s;
  }
  #userList .user:hover, #chatList .chat:hover {
    background: #b10000;
    color: white;
  }
  #userList .user.admin {
    color: #ffd700;
    font-weight: bold;
  }
  #userList .user.banned {
    text-decoration: line-through;
    opacity: 0.5;
  }
  #userList .user .actions {
    margin-top: 4px;
  }
  #userList .user .actions button {
    background: #b10000;
    border: none;
    padding: 4px 7px;
    margin-right: 5px;
    border-radius: 5px;
    color: white;
    font-size: 12px;
    cursor: pointer;
  }
  #userList .user .actions button:hover {
    background: #ff3b3b;
  }

  /* –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Å —á–∞—Ç–∞–º–∏ */
  #chatWindow {
    flex: 1;
    background: #111;
    display: flex;
    flex-direction: column;
  }
  #chatHeader {
    background: #b10000;
    color: white;
    padding: 12px;
    font-weight: bold;
    user-select: none;
  }
  #messages {
    flex: 1;
    overflow-y: auto;
    padding: 10px;
    scroll-behavior: smooth;
  }
  .message {
    margin-bottom: 12px;
    max-width: 75%;
    padding: 8px 12px;
    border-radius: 15px;
    animation: fadeInUp 0.3s ease forwards;
    user-select: text;
  }
  .message.self {
    background: #b10000;
    align-self: flex-end;
    color: #fff;
  }
  .message.other {
    background: #222;
    align-self: flex-start;
    color: #eee;
  }
  .message .sender {
    font-weight: bold;
    margin-bottom: 4px;
    font-size: 0.85em;
  }
  .message .text {
    white-space: pre-wrap;
    word-wrap: break-word;
  }
  .message img {
    max-width: 100%;
    margin-top: 6px;
    border-radius: 10px;
    cursor: pointer;
  }
  /* –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */
  .system-message {
    color: #ffa500;
    font-style: italic;
    text-align: center;
    margin: 12px 0;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(10px);
    } to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* –í–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è */
  #inputArea {
    display: flex;
    padding: 10px;
    background: #222;
    border-top: 3px solid #b10000;
  }
  #messageInput {
    flex: 1;
    border: none;
    background: #111;
    color: #eee;
    padding: 12px;
    font-size: 16px;
    border-radius: 8px;
    outline: none;
  }
  #sendBtn {
    background: #b10000;
    border: none;
    color: white;
    font-weight: bold;
    font-size: 18px;
    padding: 0 20px;
    margin-left: 10px;
    cursor: pointer;
    border-radius: 8px;
    transition: background-color 0.3s;
  }
  #sendBtn:hover:not(:disabled) {
    background: #ff3b3b;
  }
  #sendBtn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  /* –ê–Ω–∏–º–∞—Ü–∏–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ */
  #giftsContainer {
    position: fixed;
    bottom: 70px;
    right: 20px;
    pointer-events: none;
    z-index: 9999;
  }
  .gift {
    width: 60px;
    height: 60px;
    margin-bottom: 10px;
    animation: floatUp 3s ease forwards;
  }
  @keyframes floatUp {
    0% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
    100% {
      opacity: 0;
      transform: translateY(-150px) scale(1.5);
    }
  }

  /* Scrollbar –∫–∞—Å—Ç–æ–º */
  ::-webkit-scrollbar {
    width: 8px;
  }
  ::-webkit-scrollbar-track {
    background: #111;
  }
  ::-webkit-scrollbar-thumb {
    background: #b10000;
    border-radius: 4px;
  }
</style>
</head>
<body>

<header>üü• Redgram ‚Äî Telegram-–ø–æ–¥–æ–±–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä</header>

<div id="app">
  <div id="sidebar">
    <header>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</header>
    <div id="userList"></div>
    <header>–ß–∞—Ç—ã</header>
    <div id="chatList"></div>
    <button id="newChatBtn" style="margin:10px; background:#b10000; border:none; color:#fff; font-weight:bold; padding:8px; border-radius:6px; cursor:pointer;">+ –ù–æ–≤—ã–π —á–∞—Ç</button>
  </div>
  <div id="chatWindow">
    <div id="chatHeader">–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç</div>
    <div id="messages"></div>
    <div id="inputArea" style="display:none;">
      <input type="file" id="fileInput" accept="image/*" style="display:none;" />
      <input id="messageInput" placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..." autocomplete="off" />
      <button id="attachBtn" title="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" style="background:#444; border:none; color:#eee; font-size:20px; margin-right:8px; cursor:pointer;">üìé</button>
      <button id="giftBtn" title="–ü–æ–¥–∞—Ä–æ–∫ üéÅ" style="background:#444; border:none; color:#eee; font-size:20px; margin-right:8px; cursor:pointer;">üéÅ</button>
      <button id="sendBtn" disabled>‚û°Ô∏è</button>
    </div>
  </div>
</div>

<div id="giftsContainer"></div>

<script>
(() => {
  // --- –î–∞–Ω–Ω—ã–µ ---

  // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  let currentUser = null;  // { username, password, banned }
  // –ê–¥–º–∏–Ω
  const ADMIN_USERNAME = "@borisk202";

  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ‚Äî –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ localStorage
  let users = JSON.parse(localStorage.getItem("users_redgram") || "[]");
  // –ß–∞—Ç—ã
  // {id, title, members: [username], messages: [{sender, text, image, date}] }
  let chats = JSON.parse(localStorage.getItem("chats_redgram") || "[]");

  // –¢–µ–∫—É—â–∏–π –æ—Ç–∫—Ä—ã—Ç—ã–π —á–∞—Ç id
  let currentChatId = null;

  // –ë–∞–Ω-–ª–∏—Å—Ç (username)
  let bannedUsers = JSON.parse(localStorage.getItem("banned_redgram") || "[]");

  // WebSocket –∫–ª–∏–µ–Ω—Ç
  let ws = null;
  // –î–ª—è –¥–µ–º–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º echo —Å–µ—Ä–≤–µ—Ä (–∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π)
  const WS_SERVER = "wss://s14748.blr1.piesocket.com/v3/1?api_key=BzO19MHYivowkIQjrVBRMl6kVY7pg93yIxmX6JKu&notify_self=1";

  // DOM
  const userListDiv = document.getElementById("userList");
  const chatListDiv = document.getElementById("chatList");
  const chatHeader = document.getElementById("chatHeader");
  const messagesDiv = document.getElementById("messages");
  const inputArea = document.getElementById("inputArea");
  const messageInput = document.getElementById("messageInput");
  const sendBtn = document.getElementById("sendBtn");
  const newChatBtn = document.getElementById("newChatBtn");
  const attachBtn = document.getElementById("attachBtn");
  const fileInput = document.getElementById("fileInput");
  const giftBtn = document.getElementById("giftBtn");
  const giftsContainer = document.getElementById("giftsContainer");

  // --- –§—É–Ω–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ---
  function saveUsers() {
    localStorage.setItem("users_redgram", JSON.stringify(users));
  }
  function saveChats() {
    localStorage.setItem("chats_redgram", JSON.stringify(chats));
  }
  function saveBanned() {
    localStorage.setItem("banned_redgram", JSON.stringify(bannedUsers));
  }

  // --- –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç ---
  function addSystemMessage(text) {
    const div = document.createElement("div");
    div.className = "system-message";
    div.textContent = "üîî " + text;
    messagesDiv.appendChild(div);
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
  }

  // --- –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è ---
  function addMessage(msg, self = false) {
    const div = document.createElement("div");
    div.className = "message " + (self ? "self" : "other");
    if (!self) {
      const senderDiv = document.createElement("div");
      senderDiv.className = "sender";
      senderDiv.textContent = msg.sender;
      div.appendChild(senderDiv);
    }
    if (msg.text) {
      const textDiv = document.createElement("div");
      textDiv.className = "text";
      textDiv.textContent = msg.text;
      div.appendChild(textDiv);
    }
    if (msg.image) {
      const img = document.createElement("img");
      img.src = msg.image;
      img.alt = "–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ";
      img.onclick = () => window.open(msg.image, "_blank");
      div.appendChild(img);
    }
    messagesDiv.appendChild(div);
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
  }

  // --- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ---
  function renderUsers() {
    userListDiv.innerHTML = "";
    users.forEach(u => {
      const userDiv = document.createElement("div");
      userDiv.className = "user";
      if (u.username === ADMIN_USERNAME) userDiv.classList.add("admin");
      if (bannedUsers.includes(u.username)) userDiv.classList.add("banned");
      userDiv.textContent = u.username;

      // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞
      if (currentUser && currentUser.username === ADMIN_USERNAME && u.username !== ADMIN_USERNAME) {
        const actionsDiv = document.createElement("div");
        actionsDiv.className = "actions";
        // –ë–∞–Ω/—Ä–∞–∑–±–∞–Ω
        const banBtn = document.createElement("button");
        banBtn.textContent = bannedUsers.includes(u.username) ? "–†–∞–∑–±–∞–Ω" : "–ó–∞–±–∞–Ω–∏—Ç—å";
        banBtn.onclick = (e) => {
          e.stopPropagation();
          if (bannedUsers.includes(u.username)) {
            bannedUsers = bannedUsers.filter(x => x !== u.username);
            addSystemMessage(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${u.username} —Ä–∞–∑–±–∞–Ω–µ–Ω`);
          } else {
            bannedUsers.push(u.username);
            addSystemMessage(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${u.username} –∑–∞–±–∞–Ω–µ–Ω`);
          }
          saveBanned();
          renderUsers();
        };
        actionsDiv.appendChild(banBtn);

        // –ö–∏–∫ (—É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        const kickBtn = document.createElement("button");
        kickBtn.textContent = "–ö–∏–∫";
        kickBtn.onclick = (e) => {
          e.stopPropagation();
          if (confirm(`–ö–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${u.username}?`)) {
            users = users.filter(x => x.username !== u.username);
            bannedUsers = bannedUsers.filter(x => x !== u.username);
            chats.forEach(c => {
              c.members = c.members.filter(m => m !== u.username);
              c.messages = c.messages.filter(m => m.sender !== u.username);
            });
            saveUsers();
            saveBanned();
            saveChats();
            addSystemMessage(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${u.username} —É–¥–∞–ª—ë–Ω (–∫–∏–∫–Ω—É—Ç)`);
            renderUsers();
            renderChats();
            if (currentChatId) loadChat(currentChatId);
          }
        };
        actionsDiv.appendChild(kickBtn);

        userDiv.appendChild(actionsDiv);
      }
      userListDiv.appendChild(userDiv);
    });
  }

  // --- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ ---
  function renderChats() {
    chatListDiv.innerHTML = "";
    chats.forEach(chat => {
      const chatDiv = document.createElement("div");
      chatDiv.className = "chat";
      chatDiv.textContent = chat.title + ` (${chat.members.length})`;
      if (chat.id === currentChatId) {
        chatDiv.style.backgroundColor = "#b10000";
        chatDiv.style.color = "white";
      }
      chatDiv.onclick = () => {
        currentChatId = chat.id;
        loadChat(chat.id);
      };
      chatListDiv.appendChild(chatDiv);
    });
  }

  // --- –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞ ---
  function loadChat(chatId) {
    const chat = chats.find(c => c.id === chatId);
    if (!chat) {
      chatHeader.textContent = "–ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω";
      messagesDiv.innerHTML = "";
      inputArea.style.display = "none";
      return;
    }
    chatHeader.textContent = chat.title;
    messagesDiv.innerHTML = "";
    chat.messages.forEach(msg => {
      addMessage(msg, msg.sender === currentUser.username);
    });
    inputArea.style.display = bannedUsers.includes(currentUser.username) ? "none" : "flex";
    messageInput.value = "";
    sendBtn.disabled = true;
  }

  // --- –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è ---
  function sendMessage() {
    if (!currentChatId) return;
    const chat = chats.find(c => c.id === currentChatId);
    if (!chat) return;

    let text = messageInput.value.trim();
    if (!text && !fileInput.files.length) return;

    const msg = {
      sender: currentUser.username,
      text: text || null,
      image: null,
      date: new Date().toISOString()
    };

    if (fileInput.files.length) {
      const file = fileInput.files[0];
      const reader = new FileReader();
      reader.onload = function(e) {
        msg.image = e.target.result;
        chat.messages.push(msg);
        saveChats();
        addMessage(msg, true);
        fileInput.value = "";
        messageInput.value = "";
        sendBtn.disabled = true;
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —á–µ—Ä–µ–∑ WS (—ç–∫–æ)
        sendViaWebSocket(msg);
      };
      reader.readAsDataURL(file);
    } else {
      chat.messages.push(msg);
      saveChats();
      addMessage(msg, true);
      messageInput.value = "";
      sendBtn.disabled = true;
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —á–µ—Ä–µ–∑ WS (—ç–∫–æ)
      sendViaWebSocket(msg);
    }
  }

  // --- –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
  function receiveMessage(msg) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–ª—è echo —Å–µ—Ä–≤–µ—Ä–∞)
    if (msg.sender === currentUser.username) return;
    if (!currentChatId) return;
    const chat = chats.find(c => c.id === currentChatId);
    if (!chat) return;
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –≤ —á–∞—Ç–µ
    if (!chat.members.includes(msg.sender)) return;

    chat.messages.push(msg);
    saveChats();
    addMessage(msg, false);
  }

  // --- WebSocket ---
  function connectWS() {
    ws = new WebSocket(WS_SERVER);
    ws.onopen = () => {
      addSystemMessage("–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä—É");
    };
    ws.onmessage = (event) => {
      try {
        const msg = JSON.parse(event.data);
        receiveMessage(msg);
      } catch (e) {}
    };
    ws.onclose = () => {
      addSystemMessage("–û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...");
      setTimeout(connectWS, 5000);
    };
    ws.onerror = () => {
      addSystemMessage("–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è");
      ws.close();
    };
  }

  function sendViaWebSocket(msg) {
    if (ws && ws.readyState === WebSocket.OPEN) {
      ws.send(JSON.stringify(msg));
    }
  }

  // --- –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç ---
  function createChat() {
    let title = prompt("–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ (–≥—Ä—É–ø–ø–æ–≤–æ–π –∏–ª–∏ –ª–∏—á–Ω—ã–π):");
    if (!title) return;
    // –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –¥–æ–±–∞–≤–∏–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫—Ä–æ–º–µ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö
    const members = users.filter(u => !bannedUsers.includes(u.username)).map(u => u.username);
    const id = "chat_" + Date.now();
    const chat = { id, title, members, messages: [] };
    chats.push(chat);
    saveChats();
    renderChats();
  }

  // --- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –≤—Ö–æ–¥ ---
  function login() {
    let username = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, @borisk202):");
    if (!username) return login();
    if (!username.startsWith("@")) username = "@" + username;
    let user = users.find(u => u.username === username);
    if (!user) {
      // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
      let pwd = prompt("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è " + username);
      if (!pwd) return login();
      user = { username, password: pwd };
      users.push(user);
      saveUsers();
      alert("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ.");
      return login();
    }
    let pwd = prompt("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è " + username);
    if (pwd !== user.password) {
      alert("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å");
      return login();
    }
    if (bannedUsers.includes(username)) {
      alert("–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–æ–º.");
      return;
    }
    currentUser = user;
    addSystemMessage(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${currentUser.username}!`);
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —á–∞—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (chats.length) {
      currentChatId = chats[0].id;
      loadChat(currentChatId);
    } else {
      inputArea.style.display = "none";
      chatHeader.textContent = "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤";
    }
    renderUsers();
    renderChats();
    connectWS();
  }

  // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
  messageInput.addEventListener("input", () => {
    sendBtn.disabled = !messageInput.value.trim() && !fileInput.files.length;
  });
  sendBtn.addEventListener("click", sendMessage);
  newChatBtn.addEventListener("click", () => {
    if (currentUser.username !== ADMIN_USERNAME) {
      alert("–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ —á–∞—Ç—ã");
      return;
    }
    createChat();
  });
  attachBtn.addEventListener("click", () => fileInput.click());
  fileInput.addEventListener("change", () => {
    sendBtn.disabled = !messageInput.value.trim() && !fileInput.files.length;
  });

  giftBtn.addEventListener("click", () => {
    const gift = document.createElement("div");
    gift.className = "gift";
    gift.textContent = "üéÅ";
    giftsContainer.appendChild(gift);
    setTimeout(() => giftsContainer.removeChild(gift), 3000);
  });

  // --- –ó–∞–ø—É—Å–∫ ---
  login();
})();
</script>

</body>
</html>
